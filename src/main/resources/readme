log4j.properties配置说明
	1、log4j.rootLogger 
		配置根Logger
	2、log4j.appender.appenderName
		配置日志信息输出目的地Appender
			org.apache.log4j.ConsoleAppender（控制台）
			org.apache.log4j.FileAppender（文件）
			org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件）
			org.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件）
			org.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地方）
	3、log4j.appender.appenderName.layout
		配置日志信息的格式（布局）
			org.apache.log4j.HTMLLayout（以HTML表格形式布局）
			org.apache.log4j.PatternLayout（可以灵活地指定布局模式）
			org.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串）
			org.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等等信息）
	4、log4j.appender.ServerDailyRollingFile.layout.ConversionPattern
		输出打印参数
			%m   输出代码中指定的消息%p   输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL
			%r   输出自应用启动到输出该log信息耗费的毫秒数
			%c   输出所属的类目，通常就是所在类的全名
			%t   输出产生该日志事件的线程名
			%n   输出一个回车换行符，Windows平台为“\r\n”，Unix平台为“\n”
			%d   输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy MMM dd HH:mm:ss , SSS}，输出类似：2002年10月18日  22 ： 10 ： 28 ， 921 
			%l   输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。举例：test.main(test.java: 10 )
	5、ConsoleAppender选项
		Threshold=DEBUG:指定日志消息的输出最低层次。
		ImmediateFlush=true:默认值是true,意谓着所有的消息都会被立即输出。
		Target=System.err：默认情况下是：System.out,指定输出控制台
	6、FileAppender 选项
		Threshold=DEBUF:指定日志消息的输出最低层次。
		ImmediateFlush=true:默认值是true,意谓着所有的消息都会被立即输出。
		File=mylog.txt:指定消息输出到mylog.txt文件。
		Append=false:默认值是true,即将消息增加到指定文件中，false指将消息覆盖指定的文件内容。
	7、RollingFileAppender 选项
		Threshold=DEBUG:指定日志消息的输出最低层次。
		ImmediateFlush=true:默认值是true,意谓着所有的消息都会被立即输出。
		File=mylog.txt:指定消息输出到mylog.txt文件。
		Append=false:默认值是true,即将消息增加到指定文件中，false指将消息覆盖指定的文件内容。
		MaxFileSize=100KB: 后缀可以是KB, MB 或者是 GB. 在日志文件到达该大小时，将会自动滚动，即将原来的内容移到mylog.log.1文件。
		MaxBackupIndex=2:指定可以产生的滚动文件的最大数。